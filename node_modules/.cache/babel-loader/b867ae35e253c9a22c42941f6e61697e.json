{"ast":null,"code":"var _jsxFileName = \"/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/views/App.js\";\nimport React, { Component } from \"react\";\nimport MyTabNav from \"../components/MyTabNav\";\nimport data from \"../data/data\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateNewNote = (newNoteName, newNoteType, currentProject) => {\n      const tempData = {\n        \"type\": newNoteType,\n        \"title\": newNoteName,\n        \"text\": \"\"\n      };\n      this.setState({\n        currentData: data[currentProject].push(tempData)\n      });\n      console.log(this.state.currentData);\n    };\n\n    this.projectNames = Object.keys(data);\n    this.updateNewNote = this.updateNewNote.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.state = {\n      currentData: data\n    };\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, console.log(this.state.currentData), /*#__PURE__*/React.createElement(MyTabNav, {\n      projectNames: this.projectNames,\n      projectMap: this.state.currentData,\n      updateNewNote: this.updateNewNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/views/App.js"],"names":["React","Component","MyTabNav","data","App","constructor","props","updateNewNote","newNoteName","newNoteType","currentProject","tempData","setState","currentData","push","console","log","state","projectNames","Object","keys","bind","refreshPage","window","location","reload","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,aAdmB,GAcH,CAACC,WAAD,EAAcC,WAAd,EAA2BC,cAA3B,KAA8C;AAC5D,YAAMC,QAAQ,GAAG;AAAE,gBAAQF,WAAV;AAAuB,iBAASD,WAAhC;AAA6C,gBAAQ;AAArD,OAAjB;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEV,IAAI,CAACO,cAAD,CAAJ,CAAqBI,IAArB,CAA0BH,QAA1B;AADD,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,WAAvB;AACD,KApBkB;;AAEjB,SAAKK,YAAL,GAAoBC,MAAM,CAACC,IAAP,CAAYjB,IAAZ,CAApB;AACA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKJ,KAAL,GAAa;AACXJ,MAAAA,WAAW,EAAEV;AADF,KAAb;AAGD;;AAEDmB,EAAAA,WAAW,GAAG;AACZC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;AAUDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,WAAvB,CADH,eAEE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE,KAAKK,YADrB;AAEE,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWJ,WAFzB;AAGE,MAAA,aAAa,EAAE,KAAKN,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAUD;;AAlCyB;;AAqC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MyTabNav from \"../components/MyTabNav\";\n\nimport data from \"../data/data\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.projectNames = Object.keys(data);\n    this.updateNewNote = this.updateNewNote.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.state = {\n      currentData: data,\n    };\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  updateNewNote = (newNoteName, newNoteType, currentProject) => {\n    const tempData = { \"type\": newNoteType, \"title\": newNoteName, \"text\": \"\" };\n    this.setState({\n      currentData: data[currentProject].push(tempData),\n    });\n    console.log(this.state.currentData)\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {console.log(this.state.currentData)}\n        <MyTabNav\n          projectNames={this.projectNames}\n          projectMap={this.state.currentData}\n          updateNewNote={this.updateNewNote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}