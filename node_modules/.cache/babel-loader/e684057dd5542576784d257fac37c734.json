{"ast":null,"code":"import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {// const [projectMap, setProjectMap] = useState(data);\n  // const [activeTab, setActiveTab] = useState(\"0\");\n  // const [projectNames, setProjectNames] = useState(Object.keys(data));\n  // const setNewNoteData = (noteType, noteTitle, currentProject, noteURL) => {\n  //   const tempData = {\n  //     type: noteType,\n  //     title: noteTitle,\n  //     text: \"\",\n  //     url: noteURL,\n  //   };\n  //   setProjectMap({\n  //     ...projectMap,\n  //     [currentProject]: projectMap[currentProject].concat(tempData),\n  //   });\n  // };\n  // const setNewProjectData = (projectName) => {\n  //   setProjectMap({\n  //     ...projectMap,\n  //     [projectName]: [],\n  //   });\n  //   setProjectNames(projectNames.concat(projectName));\n  // };\n  // const toggle = (tab) => {\n  //   if (activeTab !== tab) setActiveTab(tab);\n  // };\n  // return (\n  //   <div aria-label=\"myTabPane\">\n  //     <main>\n  //       <Nav tabs>\n  //         {projectNames.map((project, i) => (\n  //           <NavItem key={i} className=\"font-weight-bold\">\n  //             <NavLink\n  //               className={classnames({\n  //                 active: activeTab === String(projectNames.indexOf(project)),\n  //               })}\n  //               onClick={() => {\n  //                 toggle(String(projectNames.indexOf(project)));\n  //               }}\n  //             >\n  //               {project}\n  //             </NavLink>\n  //           </NavItem>\n  //         ))}\n  //       </Nav>\n  //       <TabContent activeTab={activeTab}>\n  //         <TabPane tabId={String(activeTab)}>\n  //           <Row>\n  //             {projectMap[projectNames[activeTab]].map((note, i) => (\n  //               <NoteCard key={activeTab+i} noteObject={note} />\n  //             ))}\n  //           </Row>\n  //         </TabPane>\n  //         <NewNoteForm\n  //           currentProject={projectNames[activeTab]}\n  //           setNewNoteData={setNewNoteData}\n  //         />\n  //         <NewProjectForm setNewProjectData={setNewProjectData} projectNames={projectNames}/>\n  //       </TabContent>\n  //     </main>\n  //   </div>\n  // );\n};\n\nexport default MyTabNav;","map":{"version":3,"sources":["/home/aish/Projects/pers/notes-app/src/components/MyTabNav.js"],"names":["React","useState","classnames","NoteCard","NewNoteForm","Row","TabContent","TabPane","Nav","NavItem","NavLink","NewProjectForm","data","MyTabNav"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,OAA1B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiDC,OAAjD,QAAgE,YAAhE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM,CACrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnED;;AAqEA,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {\n  // const [projectMap, setProjectMap] = useState(data);\n  // const [activeTab, setActiveTab] = useState(\"0\");\n  // const [projectNames, setProjectNames] = useState(Object.keys(data));\n\n  // const setNewNoteData = (noteType, noteTitle, currentProject, noteURL) => {\n  //   const tempData = {\n  //     type: noteType,\n  //     title: noteTitle,\n  //     text: \"\",\n  //     url: noteURL,\n  //   };\n  //   setProjectMap({\n  //     ...projectMap,\n  //     [currentProject]: projectMap[currentProject].concat(tempData),\n  //   });\n  // };\n\n  // const setNewProjectData = (projectName) => {\n  //   setProjectMap({\n  //     ...projectMap,\n  //     [projectName]: [],\n  //   });\n  //   setProjectNames(projectNames.concat(projectName));\n  // };\n\n  // const toggle = (tab) => {\n  //   if (activeTab !== tab) setActiveTab(tab);\n  // };\n\n  // return (\n  //   <div aria-label=\"myTabPane\">\n  //     <main>\n  //       <Nav tabs>\n  //         {projectNames.map((project, i) => (\n  //           <NavItem key={i} className=\"font-weight-bold\">\n  //             <NavLink\n  //               className={classnames({\n  //                 active: activeTab === String(projectNames.indexOf(project)),\n  //               })}\n  //               onClick={() => {\n  //                 toggle(String(projectNames.indexOf(project)));\n  //               }}\n  //             >\n  //               {project}\n  //             </NavLink>\n  //           </NavItem>\n  //         ))}\n  //       </Nav>\n\n  //       <TabContent activeTab={activeTab}>\n  //         <TabPane tabId={String(activeTab)}>\n  //           <Row>\n  //             {projectMap[projectNames[activeTab]].map((note, i) => (\n  //               <NoteCard key={activeTab+i} noteObject={note} />\n  //             ))}\n  //           </Row>\n  //         </TabPane>\n  //         <NewNoteForm\n  //           currentProject={projectNames[activeTab]}\n  //           setNewNoteData={setNewNoteData}\n  //         />\n  //         <NewProjectForm setNewProjectData={setNewProjectData} projectNames={projectNames}/>\n  //       </TabContent>\n  //     </main>\n  //   </div>\n  // );\n};\n\nexport default MyTabNav;\n"]},"metadata":{},"sourceType":"module"}