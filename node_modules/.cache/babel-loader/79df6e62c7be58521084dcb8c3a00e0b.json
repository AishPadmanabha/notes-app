{"ast":null,"code":"var _jsxFileName = \"/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/NewNoteForm.js\";\nimport React, { useState } from \"react\";\nimport { Input, Form, FormGroup, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormFeedback } from \"reactstrap\";\n\nconst NewNoteForm = props => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [noteType, setNoteType] = useState(\"\");\n  const [noteTitle, setNoteTitle] = useState(\"\");\n  const [noteURL, setNoteURL] = useState(\"\");\n  const [validate, setValidate] = useState(\"\");\n  const [urlValidate, setUrlValidate] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (validate === \"has-success\") {\n      props.setNewNoteData(noteType, noteTitle, props.currentProject, noteURL);\n    }\n  };\n\n  const checkURL = url => {\n    console.log(url);\n\n    try {\n      new URL(url);\n    } catch (_) {\n      setUrlValidate(\"has-danger\");\n    }\n\n    setUrlValidate(\"has-success\");\n  };\n\n  const validateProperty = (a, b) => {\n    if (a === b) {\n      setValidate(\"has-danger\");\n    } else {\n      setValidate(\"has-success\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": \"newNoteForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"primary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"New Note\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"New Note Details:\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"What type of a note is it?\"), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"noteTypeText\",\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    id: \"noteTypeText\",\n    name: \"noteType\",\n    onClick: () => setNoteType(\"text\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }), \"Text\")), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"noteTypeLink\",\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"radio\",\n    id: \"noteTypeLink\",\n    name: \"noteType\",\n    onClick: () => setNoteType(\"link\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }), \"Link\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"noteTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Note Title:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"noteTitle\",\n    id: \"noteTitle\",\n    onChange: e => {\n      setNoteTitle(e.target.value);\n      validateProperty(e.target.value, \"\");\n    },\n    valid: validate === \"has-success\",\n    invalid: validate === \"has-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Great!\"), /*#__PURE__*/React.createElement(FormFeedback, {\n    invalid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Please provide a title!\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"noteURL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"URL (for link note)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"noteURL\",\n    id: \"noteURL\",\n    onChange: e => {\n      setNoteURL(e.target.value);\n      checkURL(e.target.value);\n    },\n    valid: urlValidate === \"has-success\",\n    invalid: urlValidate === \"has-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Great!\"), /*#__PURE__*/React.createElement(FormFeedback, {\n    invalid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Please enter a valid URL!\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: () => {\n      toggle();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default NewNoteForm;","map":{"version":3,"sources":["/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/NewNoteForm.js"],"names":["React","useState","Input","Form","FormGroup","Label","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormFeedback","NewNoteForm","props","modal","setModal","toggle","noteType","setNoteType","noteTitle","setNoteTitle","noteURL","setNoteURL","validate","setValidate","urlValidate","setUrlValidate","handleSubmit","setNewNoteData","currentProject","checkURL","url","console","log","URL","_","validateProperty","a","b","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,WAPF,EAQEC,SARF,EASEC,WATF,EAUEC,YAVF,QAWO,YAXP;;AAaA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMe,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAM0B,YAAY,GAAG,MAAM;AACzB,QAAIJ,QAAQ,KAAK,aAAjB,EAAgC;AAC9BV,MAAAA,KAAK,CAACe,cAAN,CAAqBX,QAArB,EAA+BE,SAA/B,EAA0CN,KAAK,CAACgB,cAAhD,EAAgER,OAAhE;AACD;AACF,GAJD;;AAMA,QAAMS,QAAQ,GAAIC,GAAD,IAAS;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAI;AACF,UAAIG,GAAJ,CAAQH,GAAR;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU;AACVT,MAAAA,cAAc,CAAC,YAAD,CAAd;AACD;;AAEDA,IAAAA,cAAc,CAAC,aAAD,CAAd;AACD,GATD;;AAWA,QAAMU,gBAAgB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,QAAID,CAAC,KAAKC,CAAV,EAAa;AACXd,MAAAA,WAAW,CAAC,YAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,aAAD,CAAX;AACD;AACF,GAND;;AAQA,sBACE;AAAK,kBAAW,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAER,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,cAAX;AAA0B,IAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,OAAO,EAAE,MAAMT,WAAW,CAAC,MAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,SADF,CAFF,eAaE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,cAAX;AAA0B,IAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,MAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,SADF,CAbF,CADF,eA0BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,QAAQ,EAAGqB,CAAD,IAAO;AACfnB,MAAAA,YAAY,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACAL,MAAAA,gBAAgB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,EAAjB,CAAhB;AACD,KAPH;AAQE,IAAA,KAAK,EAAElB,QAAQ,KAAK,aARtB;AASE,IAAA,OAAO,EAAEA,QAAQ,KAAK,YATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAaE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,oBAAC,YAAD;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAdF,CA1BF,eA0CE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,QAAQ,EAAGgB,CAAD,IAAO;AACfjB,MAAAA,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACAX,MAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KAPH;AAQE,IAAA,KAAK,EAAEhB,WAAW,KAAK,aARzB;AASE,IAAA,OAAO,EAAEA,WAAW,KAAK,YAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAaE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,oBAAC,YAAD;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAdF,CA1CF,CADF,CAFF,eA+DE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,MAAM;AACNW,MAAAA,YAAY;AACb,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEX,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CA/DF,CAJF,CADF;AAsFD,CAzHD;;AA2HA,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormFeedback,\n} from \"reactstrap\";\n\nconst NewNoteForm = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const [noteType, setNoteType] = useState(\"\");\n  const [noteTitle, setNoteTitle] = useState(\"\");\n  const [noteURL, setNoteURL] = useState(\"\");\n  const [validate, setValidate] = useState(\"\");\n  const [urlValidate, setUrlValidate] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (validate === \"has-success\") {\n      props.setNewNoteData(noteType, noteTitle, props.currentProject, noteURL);\n    }\n  };\n\n  const checkURL = (url) => {\n    console.log(url)\n    try {\n      new URL(url);\n    } catch (_) {\n      setUrlValidate(\"has-danger\");\n    }\n\n    setUrlValidate(\"has-success\");\n  };\n\n  const validateProperty = (a, b) => {\n    if (a === b) {\n      setValidate(\"has-danger\");\n    } else {\n      setValidate(\"has-success\");\n    }\n  };\n\n  return (\n    <div aria-label=\"newNoteForm\">\n      <Button className=\"primary\" onClick={toggle}>\n        New Note\n      </Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>New Note Details:</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup tag=\"fieldset\">\n              <Label>What type of a note is it?</Label>\n              <FormGroup check>\n                <Label for=\"noteTypeText\" check>\n                  <Input\n                    type=\"radio\"\n                    id=\"noteTypeText\"\n                    name=\"noteType\"\n                    onClick={() => setNoteType(\"text\")}\n                  />\n                  Text\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label for=\"noteTypeLink\" check>\n                  <Input\n                    type=\"radio\"\n                    id=\"noteTypeLink\"\n                    name=\"noteType\"\n                    onClick={() => setNoteType(\"link\")}\n                  />\n                  Link\n                </Label>\n              </FormGroup>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"noteTitle\">Note Title:</Label>\n              <Input\n                type=\"text\"\n                name=\"noteTitle\"\n                id=\"noteTitle\"\n                onChange={(e) => {\n                  setNoteTitle(e.target.value);\n                  validateProperty(e.target.value, \"\");\n                }}\n                valid={validate === \"has-success\"}\n                invalid={validate === \"has-danger\"}\n              />\n              <FormFeedback valid>Great!</FormFeedback>\n              <FormFeedback invalid>Please provide a title!</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"noteURL\">URL (for link note)</Label>\n              <Input\n                type=\"text\"\n                name=\"noteURL\"\n                id=\"noteURL\"\n                onChange={(e) => {\n                  setNoteURL(e.target.value);\n                  checkURL(e.target.value);\n                }}\n                valid={urlValidate === \"has-success\"}\n                invalid={urlValidate === \"has-danger\"}\n              />\n              <FormFeedback valid>Great!</FormFeedback>\n              <FormFeedback invalid>Please enter a valid URL!</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            onClick={() => {\n              toggle();\n              handleSubmit();\n            }}\n          >\n            Create\n          </Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewNoteForm;\n"]},"metadata":{},"sourceType":"module"}