{"ast":null,"code":"var _jsxFileName = \"/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/MyTabNav.js\";\nimport React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {\n  const [projectMap, setProjectMap] = useState(data);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [projectNames, setProjectNames] = useState(Object.keys(data));\n\n  const setNewNoteData = (noteType, noteTitle, currentProject) => {\n    const tempData = {\n      \"type\": noteType,\n      \"title\": noteTitle,\n      \"text\": \"\"\n    };\n    setProjectMap({ ...projectMap,\n      [currentProject]: projectMap[currentProject].concat(tempData)\n    });\n    setProjectNames(Object.keys(projectMap));\n  };\n\n  const toggle = tab => {\n    console.log(tab);\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  x;\n  console.log(activeTab);\n  console.log(projectMap);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, projectNames.map((project, i) => /*#__PURE__*/React.createElement(NavItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === String(projectNames.indexOf(project))\n    }),\n    onClick: () => {\n      toggle(String(projectNames.indexOf(project)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, project)))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: String(activeTab),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, projectMap[projectNames[activeTab]].map((note, i) => /*#__PURE__*/React.createElement(NoteCard, {\n    key: i,\n    noteObject: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(NewNoteForm, {\n    currentProject: projectNames[activeTab],\n    setNewNoteData: setNewNoteData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NewProjectForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MyTabNav;","map":{"version":3,"sources":["/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/MyTabNav.js"],"names":["React","useState","classnames","NoteCard","NewNoteForm","Row","TabContent","TabPane","Nav","NavItem","NavLink","NewProjectForm","data","MyTabNav","projectMap","setProjectMap","activeTab","setActiveTab","projectNames","setProjectNames","Object","keys","setNewNoteData","noteType","noteTitle","currentProject","tempData","concat","toggle","tab","console","log","x","map","project","i","active","String","indexOf","note"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,OAA1B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiDC,OAAjD,QAAgE,YAAhE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACW,IAAD,CAA3C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,GAAD,CAA1C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAACmB,MAAM,CAACC,IAAP,CAAYT,IAAZ,CAAD,CAAhD;;AAEA,QAAMU,cAAc,GAAG,CAACC,QAAD,EAAUC,SAAV,EAAoBC,cAApB,KAAuC;AAC5D,UAAMC,QAAQ,GAAG;AAAE,cAAQH,QAAV;AAAoB,eAASC,SAA7B;AAAwC,cAAQ;AAAhD,KAAjB;AACAT,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACW,cAAD,GAAkBX,UAAU,CAACW,cAAD,CAAV,CAA2BE,MAA3B,CAAkCD,QAAlC;AAAlC,KAAD,CAAb;AACAP,IAAAA,eAAe,CAACC,MAAM,CAACC,IAAP,CAAYP,UAAZ,CAAD,CAAf;AACD,GAJD;;AAMA,QAAMc,MAAM,GAAIC,GAAD,IAAS;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAIb,SAAS,KAAKa,GAAlB,EAAuBZ,YAAY,CAACY,GAAD,CAAZ;AACxB,GAHD;;AAIFG,EAAAA,CAAC;AACCF,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,YAAY,CAACe,GAAb,CAAiB,CAACC,OAAD,EAAUC,CAAV,kBAChB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEjC,UAAU,CAAC;AACpBkC,MAAAA,MAAM,EACJpB,SAAS,KAAKqB,MAAM,CAACnB,YAAY,CAACoB,OAAb,CAAqBJ,OAArB,CAAD;AAFF,KAAD,CADvB;AAKE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,MAAM,CAACS,MAAM,CAACnB,YAAY,CAACoB,OAAb,CAAqBJ,OAArB,CAAD,CAAP,CAAN;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGA,OATH,CADF,CADD,CADH,CADF,eAmBE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEqB,MAAM,CAACrB,SAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,CAACI,YAAY,CAACF,SAAD,CAAb,CAAV,CAAoCiB,GAApC,CAAwC,CAACM,IAAD,EAAOJ,CAAP,kBACvC,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,UAAU,EAAEI,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF,eAQE,oBAAC,WAAD;AAAa,IAAA,cAAc,EAAErB,YAAY,CAACF,SAAD,CAAzC;AAAsD,IAAA,cAAc,EAAEM,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAnBF,CADF;AAiCD,CApDD;;AAsDA,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {\n  const[projectMap, setProjectMap] = useState(data);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [projectNames, setProjectNames] = useState(Object.keys(data));\n  \n  const setNewNoteData = (noteType,noteTitle,currentProject) => {\n    const tempData = { \"type\": noteType, \"title\": noteTitle, \"text\": \"\" };\n    setProjectMap({...projectMap, [currentProject]: projectMap[currentProject].concat(tempData)})\n    setProjectNames(Object.keys(projectMap))\n  }\n\n  const toggle = (tab) => {\n    console.log(tab)\n    if (activeTab !== tab) setActiveTab(tab);\n  };\nx\n  console.log(activeTab)\n  console.log(projectMap)\n\n  return (\n    <div>\n      <Nav tabs>\n        {projectNames.map((project, i) => (\n          <NavItem key={i}>\n            <NavLink\n              className={classnames({\n                active:\n                  activeTab === String(projectNames.indexOf(project)),\n              })}\n              onClick={() => {\n                toggle(String(projectNames.indexOf(project)));\n              }}\n            >\n              {project}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId={String(activeTab)}>\n          <Row>\n            {projectMap[projectNames[activeTab]].map((note, i) => (\n              <NoteCard key={i} noteObject={note} />\n            ))}\n          </Row>\n        </TabPane>\n        <NewNoteForm currentProject={projectNames[activeTab]} setNewNoteData={setNewNoteData}/>\n        <NewProjectForm />\n      </TabContent>\n    </div>\n  );\n};\n\nexport default MyTabNav;\n"]},"metadata":{},"sourceType":"module"}