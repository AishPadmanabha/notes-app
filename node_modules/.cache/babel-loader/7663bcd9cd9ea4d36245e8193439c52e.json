{"ast":null,"code":"var _jsxFileName = \"/home/aish/Projects/pers/notes-app/src/components/NewProjectForm.js\";\nimport React, { useState } from \"react\";\nimport { Input, Form, FormGroup, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormFeedback } from \"reactstrap\";\n\nconst NewProjectForm = props => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [projectName, setProjectName] = useState(\"\");\n  const [validate, setValidate] = useState(\"\");\n\n  const setNewProjectData = projectName => {\n    setProjectMap({ ...projectMap,\n      [projectName]: []\n    });\n    setProjectNames(projectNames.concat(projectName));\n  };\n\n  const handleSubmit = () => {\n    toggle();\n\n    if (validate === \"has-success\") {\n      props.setNewProjectData(projectName);\n    }\n\n    setValidate(\"\");\n    setProjectName(\"\");\n  };\n\n  const validateProjectName = projectName => {\n    if (props.projectNames.includes(projectName)) {\n      setValidate(\"has-danger\");\n    } else {\n      setValidate(\"has-success\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": \"newProjectForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"primary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"New Project\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"New Project Details:\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"projectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Project Name:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"projectName\",\n    id: \"projectName\",\n    onChange: e => {\n      setProjectName(e.target.value);\n      validateProjectName(e.target.value);\n    },\n    valid: validate === \"has-success\",\n    invalid: validate === \"has-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"That's a good project name!\"), /*#__PURE__*/React.createElement(FormFeedback, {\n    invalid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Uh oh! This project name is taken, sorry!\"))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nexport default NewProjectForm;","map":{"version":3,"sources":["/home/aish/Projects/pers/notes-app/src/components/NewProjectForm.js"],"names":["React","useState","Input","Form","FormGroup","Label","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormFeedback","NewProjectForm","props","modal","setModal","toggle","projectName","setProjectName","validate","setValidate","setNewProjectData","setProjectMap","projectMap","setProjectNames","projectNames","concat","handleSubmit","validateProjectName","includes","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormFeedback,\n} from \"reactstrap\";\n\nconst NewProjectForm = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [projectName, setProjectName] = useState(\"\");\n  const [validate, setValidate] = useState(\"\");\n\n  const setNewProjectData = (projectName) => {\n    setProjectMap({\n      ...projectMap,\n      [projectName]: [],\n    });\n    setProjectNames(projectNames.concat(projectName));\n  };\n\n  const handleSubmit = () => {\n    toggle();\n    if (validate === \"has-success\") {\n      props.setNewProjectData(projectName);\n    }\n    setValidate(\"\");\n    setProjectName(\"\");\n  };\n\n  const validateProjectName = (projectName) => {\n    if (props.projectNames.includes(projectName)) {\n      setValidate(\"has-danger\");\n    } else {\n      setValidate(\"has-success\");\n    }\n  };\n\n  return (\n    <div aria-label=\"newProjectForm\">\n      <Button className=\"primary\" onClick={toggle}>\n        New Project\n      </Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <Form onSubmit={handleSubmit()}>\n          <ModalHeader toggle={toggle}>New Project Details:</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"projectName\">Project Name:</Label>\n              <Input\n                type=\"text\"\n                name=\"projectName\"\n                id=\"projectName\"\n                onChange={(e) => {\n                  setProjectName(e.target.value);\n                  validateProjectName(e.target.value);\n                }}\n                valid={validate === \"has-success\"}\n                invalid={validate === \"has-danger\"}\n              />\n              <FormFeedback valid>That's a good project name!</FormFeedback>\n              <FormFeedback invalid>\n                Uh oh! This project name is taken, sorry!\n              </FormFeedback>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\">\n              Create\n            </Button>\n            <Button color=\"secondary\" onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewProjectForm;\n"]},"metadata":{},"sourceType":"module"}