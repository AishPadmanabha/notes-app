{"ast":null,"code":"var _jsxFileName = \"/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/MyTabNav.js\";\nimport React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {\n  const [projectMap, setProjectMap] = useState(data);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [projectNames, setProjectNames] = useState(Object.keys(data));\n\n  const setNewNoteData = (noteType, noteTitle, currentProject, noteURL) => {\n    const tempData = {\n      type: noteType,\n      title: noteTitle,\n      text: \"\",\n      url: noteURL\n    }; // setProjectMap({...projectMap, [projectMap]: projectMap[currentProject].concat(tempData)})\n\n    setProjectMap({ ...projectMap,\n      [currentProject]: projectMap[currentProject].concat(tempData)\n    });\n  };\n\n  const setNewProjectData = projectName => {\n    Object.assign(projectMap, {\n      projectName: []\n    });\n    console.log(projectMap);\n    setProjectNames(projectNames.concat(projectName));\n  };\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, projectNames.map((project, i) => /*#__PURE__*/React.createElement(NavItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === String(projectNames.indexOf(project))\n    }),\n    onClick: () => {\n      toggle(String(projectNames.indexOf(project)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, project)))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: String(activeTab),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, projectMap[projectNames[activeTab]].map((note, i) => /*#__PURE__*/React.createElement(NoteCard, {\n    key: i,\n    noteObject: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(NewNoteForm, {\n    currentProject: projectNames[activeTab],\n    setNewNoteData: setNewNoteData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NewProjectForm, {\n    setNewProjectData: setNewProjectData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MyTabNav;","map":{"version":3,"sources":["/home/aish/Projects/northeastern/cs7580/Aishwarya_Padmanabha_Assignment2/assignment2/src/components/MyTabNav.js"],"names":["React","useState","classnames","NoteCard","NewNoteForm","Row","TabContent","TabPane","Nav","NavItem","NavLink","NewProjectForm","data","MyTabNav","projectMap","setProjectMap","activeTab","setActiveTab","projectNames","setProjectNames","Object","keys","setNewNoteData","noteType","noteTitle","currentProject","noteURL","tempData","type","title","text","url","concat","setNewProjectData","projectName","assign","console","log","toggle","tab","map","project","i","active","String","indexOf","note"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport NoteCard from \"./NoteCard\";\nimport NewNoteForm from \"../components/NewNoteForm\";\nimport { Row, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport NewProjectForm from \"./NewProjectForm\";\nimport data from \"../data/data\";\n\nconst MyTabNav = () => {\n  const [projectMap, setProjectMap] = useState(data);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [projectNames, setProjectNames] = useState(Object.keys(data));\n\n  const setNewNoteData = (noteType, noteTitle, currentProject, noteURL) => {\n    const tempData = {\n      type: noteType,\n      title: noteTitle,\n      text: \"\",\n      url: noteURL,\n    };\n    // setProjectMap({...projectMap, [projectMap]: projectMap[currentProject].concat(tempData)})\n    setProjectMap({\n      ...projectMap,\n      [currentProject]: projectMap[currentProject].concat(tempData),\n    });\n  };\n\n  const setNewProjectData = (projectName) => {\n    Object.assign(projectMap, { projectName: [] })\n    console.log(projectMap)\n    setProjectNames(projectNames.concat(projectName));\n  };\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return (\n    <div>\n      <Nav tabs>\n        {projectNames.map((project, i) => (\n          <NavItem key={i}>\n            <NavLink\n              className={classnames({\n                active: activeTab === String(projectNames.indexOf(project)),\n              })}\n              onClick={() => {\n                toggle(String(projectNames.indexOf(project)));\n              }}\n            >\n              {project}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId={String(activeTab)}>\n          <Row>\n            {/* {console.log(projectMap)} */}\n            {projectMap[projectNames[activeTab]].map((note, i) => (\n              <NoteCard key={i} noteObject={note} />\n            ))}\n          </Row>\n        </TabPane>\n        <NewNoteForm\n          currentProject={projectNames[activeTab]}\n          setNewNoteData={setNewNoteData}\n        />\n        <NewProjectForm setNewProjectData={setNewProjectData} />\n      </TabContent>\n    </div>\n  );\n};\n\nexport default MyTabNav;\n"]},"metadata":{},"sourceType":"module"}