{"ast":null,"code":"import _defineProperty from\"/home/aish/Projects/pers/notes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/aish/Projects/pers/notes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/aish/Projects/pers/notes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Input,Form,FormGroup,Label,Button,Modal,ModalHeader,ModalBody,ModalFooter,FormFeedback}from\"reactstrap\";var NewNoteForm=function NewNoteForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var toggle=function toggle(){return setModal(!modal);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),noteType=_useState4[0],setNoteType=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),noteTitle=_useState6[0],setNoteTitle=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),noteURL=_useState8[0],setNoteURL=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),validate=_useState10[0],setValidate=_useState10[1];var setNewNoteData=function setNewNoteData(noteType,noteTitle,currentProject,noteURL){var tempData={type:noteType,title:noteTitle,text:\"\",url:noteURL};props.setProjectMap(_objectSpread(_objectSpread({},props.projectMap),{},_defineProperty({},currentProject,props.projectMap[currentProject].concat(tempData))));};var handleSubmit=function handleSubmit(){console.log(\"here\");toggle();if(validate===\"has-success\"){setNewNoteData(noteType,noteTitle,props.currentProject,noteURL);}};var validateProperty=function validateProperty(a,b){if(a===b){setValidate(\"has-danger\");}else{setValidate(\"has-success\");}};return/*#__PURE__*/React.createElement(\"div\",{\"aria-label\":\"newNoteForm\"},/*#__PURE__*/React.createElement(Button,{className:\"primary\",onClick:toggle},\"New Note\"),/*#__PURE__*/React.createElement(Modal,{isOpen:modal,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},\"New Note Details:\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Label,null,\"What type of a note is it?\"),/*#__PURE__*/React.createElement(FormGroup,{check:true},/*#__PURE__*/React.createElement(Label,{for:\"noteTypeText\",check:true},/*#__PURE__*/React.createElement(Input,{type:\"radio\",id:\"noteTypeText\",name:\"noteType\",onClick:function onClick(){return setNoteType(\"text\");}}),\"Text\")),/*#__PURE__*/React.createElement(FormGroup,{check:true},/*#__PURE__*/React.createElement(Label,{for:\"noteTypeLink\",check:true},/*#__PURE__*/React.createElement(Input,{type:\"radio\",id:\"noteTypeLink\",name:\"noteType\",onClick:function onClick(){return setNoteType(\"link\");}}),\"Link\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"noteTitle\"},\"Note Title:\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"noteTitle\",id:\"noteTitle\",onChange:function onChange(e){setNoteTitle(e.target.value);validateProperty(e.target.value,\"\");},valid:validate===\"has-success\",invalid:validate===\"has-danger\"}),/*#__PURE__*/React.createElement(FormFeedback,{valid:true},\"Great!\"),/*#__PURE__*/React.createElement(FormFeedback,{invalid:true},\"Please provide a title!\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"noteURL\"},\"URL (for link note)\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"noteURL\",id:\"noteURL\",onChange:function onChange(e){return setNoteURL(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\"},\"Create\"),\"\\xA0\\xA0\\xA0\",/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:toggle},\"Cancel\")))));};export default NewNoteForm;","map":{"version":3,"sources":["/home/aish/Projects/pers/notes-app/src/components/NewNoteForm.js"],"names":["React","useState","Input","Form","FormGroup","Label","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormFeedback","NewNoteForm","props","modal","setModal","toggle","noteType","setNoteType","noteTitle","setNoteTitle","noteURL","setNoteURL","validate","setValidate","setNewNoteData","currentProject","tempData","type","title","text","url","setProjectMap","projectMap","concat","handleSubmit","console","log","validateProperty","a","b","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormFeedback,\n} from \"reactstrap\";\n\nconst NewNoteForm = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const [noteType, setNoteType] = useState(\"\");\n  const [noteTitle, setNoteTitle] = useState(\"\");\n  const [noteURL, setNoteURL] = useState(\"\");\n  const [validate, setValidate] = useState(\"\");\n\n  const setNewNoteData = (noteType, noteTitle, currentProject, noteURL) => {\n    const tempData = {\n      type: noteType,\n      title: noteTitle,\n      text: \"\",\n      url: noteURL,\n    };\n    props.setProjectMap({\n      ...props.projectMap,\n      [currentProject]: props.projectMap[currentProject].concat(tempData),\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(\"here\");\n    toggle();\n    if (validate === \"has-success\") {\n      setNewNoteData(noteType, noteTitle, props.currentProject, noteURL);\n    }\n  };\n\n  const validateProperty = (a, b) => {\n    if (a === b) {\n      setValidate(\"has-danger\");\n    } else {\n      setValidate(\"has-success\");\n    }\n  };\n\n  return (\n    <div aria-label=\"newNoteForm\">\n      <Button className=\"primary\" onClick={toggle}>\n        New Note\n      </Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>New Note Details:</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Label>What type of a note is it?</Label>\n            <FormGroup check>\n              <Label for=\"noteTypeText\" check>\n                <Input\n                  type=\"radio\"\n                  id=\"noteTypeText\"\n                  name=\"noteType\"\n                  onClick={() => setNoteType(\"text\")}\n                />\n                Text\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"noteTypeLink\" check>\n                <Input\n                  type=\"radio\"\n                  id=\"noteTypeLink\"\n                  name=\"noteType\"\n                  onClick={() => setNoteType(\"link\")}\n                />\n                Link\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"noteTitle\">Note Title:</Label>\n              <Input\n                type=\"text\"\n                name=\"noteTitle\"\n                id=\"noteTitle\"\n                onChange={(e) => {\n                  setNoteTitle(e.target.value);\n                  validateProperty(e.target.value, \"\");\n                }}\n                valid={validate === \"has-success\"}\n                invalid={validate === \"has-danger\"}\n              />\n              <FormFeedback valid>Great!</FormFeedback>\n              <FormFeedback invalid>Please provide a title!</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"noteURL\">URL (for link note)</Label>\n              <Input\n                type=\"text\"\n                name=\"noteURL\"\n                id=\"noteURL\"\n                onChange={(e) => setNoteURL(e.target.value)}\n              />\n            </FormGroup>\n            <Button type=\"submit\" color=\"primary\">\n              Create\n            </Button>\n            &nbsp;&nbsp;&nbsp;\n            <Button color=\"secondary\" onClick={toggle}>\n              Cancel\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewNoteForm;\n"]},"metadata":{},"sourceType":"module"}